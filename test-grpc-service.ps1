# Test script cho Product gRPC Service
Write-Host "=== Testing Product gRPC Service v·ªõi grpcurl ===" -ForegroundColor Green

# Ki·ªÉm tra grpcurl c√≥ s·∫µn kh√¥ng
if (-not (Get-Command grpcurl -ErrorAction SilentlyContinue)) {
    Write-Host "grpcurl ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. ƒêang t·∫£i xu·ªëng..." -ForegroundColor Yellow
    
    # T·∫°o th∆∞ m·ª•c grpcurl n·∫øu ch∆∞a c√≥
    if (-not (Test-Path "grpcurl")) {
        New-Item -ItemType Directory -Name "grpcurl"
    }
    
    # Download grpcurl cho Windows
    $downloadUrl = "https://github.com/fullstorydev/grpcurl/releases/download/v1.8.9/grpcurl_1.8.9_windows_x86_64.tar.gz"
    $outputFile = "grpcurl/grpcurl.tar.gz"
    
    Write-Host "Downloading grpcurl t·ª´ GitHub..." -ForegroundColor Yellow
    Invoke-WebRequest -Uri $downloadUrl -OutFile $outputFile
    
    # Extract file
    Write-Host "Extracting grpcurl..." -ForegroundColor Yellow
    tar -xzf $outputFile -C grpcurl/
    
    Write-Host "grpcurl ƒë√£ ƒë∆∞·ª£c t·∫£i xu·ªëng th√†nh c√¥ng!" -ForegroundColor Green
}

# ƒê∆∞·ªùng d·∫´n t·ªõi grpcurl
$grpcurlPath = if (Get-Command grpcurl -ErrorAction SilentlyContinue) { "grpcurl" } else { "./grpcurl/grpcurl.exe" }

Write-Host "`nKi·ªÉm tra gRPC server c√≥ ƒëang ch·∫°y kh√¥ng..." -ForegroundColor Yellow
$serverRunning = $false
try {
    $result = & $grpcurlPath -plaintext localhost:6565 list 2>$null
    if ($LASTEXITCODE -eq 0) {
        $serverRunning = $true
        Write-Host "‚úÖ gRPC server ƒëang ch·∫°y tr√™n localhost:6565" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå gRPC server kh√¥ng ch·∫°y ho·∫∑c kh√¥ng th·ªÉ k·∫øt n·ªëi" -ForegroundColor Red
}

if (-not $serverRunning) {
    Write-Host "`nüöÄ Kh·ªüi ƒë·ªông product-service..." -ForegroundColor Yellow
    Write-Host "Vui l√≤ng ch·∫°y l·ªánh sau trong terminal kh√°c:" -ForegroundColor Cyan
    Write-Host "cd product-service && mvn spring-boot:run" -ForegroundColor White
    Write-Host "`nSau khi service kh·ªüi ƒë·ªông, ch·∫°y l·∫°i script n√†y." -ForegroundColor Yellow
    exit 1
}

Write-Host "`n=== B·∫Øt ƒë·∫ßu Test Cases ===" -ForegroundColor Green

# Test 1: Li·ªát k√™ c√°c services c√≥ s·∫µn
Write-Host "`n1. üìã Li·ªát k√™ c√°c gRPC services:" -ForegroundColor Yellow
& $grpcurlPath -plaintext localhost:6565 list

# Test 2: M√¥ t·∫£ ProductService
Write-Host "`n2. üìñ M√¥ t·∫£ ProductService:" -ForegroundColor Yellow
& $grpcurlPath -plaintext localhost:6565 describe product.ProductService

# Test 3: Test v·ªõi product ID kh√¥ng t·ªìn t·∫°i (s·∫Ω tr·∫£ v·ªÅ NOT_FOUND)
Write-Host "`n3. ‚ùå Test v·ªõi product ID kh√¥ng t·ªìn t·∫°i:" -ForegroundColor Yellow
$testRequest1 = @{
    product_id = "non-existent-id"
} | ConvertTo-Json -Compress

Write-Host "Request: $testRequest1" -ForegroundColor Cyan
& $grpcurlPath -plaintext -d $testRequest1 localhost:6565 product.ProductService/GetProductInfo

# Test 4: Test v·ªõi product ID r·ªóng
Write-Host "`n4. ‚ö†Ô∏è Test v·ªõi product ID r·ªóng:" -ForegroundColor Yellow
$testRequest2 = @{
    product_id = ""
} | ConvertTo-Json -Compress

Write-Host "Request: $testRequest2" -ForegroundColor Cyan
& $grpcurlPath -plaintext -d $testRequest2 localhost:6565 product.ProductService/GetProductInfo

# Test 5: Test v·ªõi product ID h·ª£p l·ªá (gi·∫£ s·ª≠ c√≥ data)
Write-Host "`n5. ‚úÖ Test v·ªõi product ID h·ª£p l·ªá (test-123):" -ForegroundColor Yellow
$testRequest3 = @{
    product_id = "test-123"
} | ConvertTo-Json -Compress

Write-Host "Request: $testRequest3" -ForegroundColor Cyan
& $grpcurlPath -plaintext -d $testRequest3 localhost:6565 product.ProductService/GetProductInfo

Write-Host "`n=== Test ho√†n th√†nh ===" -ForegroundColor Green
Write-Host "`nüí° L∆∞u √Ω:" -ForegroundColor Yellow
Write-Host "- T·∫•t c·∫£ requests hi·ªán t·∫°i s·∫Ω tr·∫£ v·ªÅ NOT_FOUND v√¨ ch∆∞a c√≥ test data trong database" -ForegroundColor White
Write-Host "- ƒê·ªÉ c√≥ data test, c·∫ßn ch·∫°y Task 105 ƒë·ªÉ t·∫°o sample data" -ForegroundColor White
Write-Host "- gRPC service dang hoat dong binh thuong neu ban thay error messages co format dung" -ForegroundColor White 